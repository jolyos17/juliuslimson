namespace ConsoleApp5
{
    using System;
    using System.Collections.Generic;

    public enum RoomStyle
    {
        TwinRoom,
        QueenRoom,
        KingRoom
    }

    public class HotelRoom
    {
        public int RoomNumber { get; set; }
        public RoomStyle Style { get; set; }
        public decimal BookingPrice { get; set; }
        public bool Status { get; set; }

        public HotelRoom(int roomNumber, RoomStyle style, decimal bookingPrice)
        {
            RoomNumber = roomNumber;
            Style = style;
            BookingPrice = bookingPrice;
            Status = true;
        }
    }

    public class Hotel
    {
        public string HotelName { get; set; }
        public string Location { get; set; }
        private List<HotelRoom> allRooms;

        public Hotel(string hotelName, string location, List<HotelRoom> rooms)
        {
            HotelName = hotelName;
            Location = location;
            allRooms = rooms;
        }

        public void DisplayAvailableRooms()
        {
            Console.WriteLine($"Hotel {HotelName} - Available Rooms:");
            foreach (var room in allRooms)
            {
                if (room.Status)
                {
                    Console.WriteLine($"Room {room.RoomNumber}, Style: {room.Style}, Price: {room.BookingPrice}");
                }
            }
        }

        public void DisplayBookedRooms()
        {
            Console.WriteLine($"Hotel {HotelName} - Booked Rooms:");
            foreach (var room in allRooms)
            {
                if (!room.Status)
                {
                    Console.WriteLine($"Room {room.RoomNumber}, Style: {room.Style}, Price: {room.BookingPrice}");
                }
            }
        }
    }

    public class Reservation
    {
        public int ReservationNumber { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
        public HotelRoom Room { get; set; }
        public int DurationInDays { get; set; }
        public decimal Total { get; set; }

        public Reservation(DateTime startTime, DateTime endTime, HotelRoom room)
        {
            ReservationNumber = GenerateReservationNumber();
            StartTime = startTime;
            EndTime = endTime;
            Room = room;
            DurationInDays = (int)(endTime - startTime).TotalDays;
            Total = DurationInDays * room.BookingPrice;
        }

        private int GenerateReservationNumber()
        {
            Random random = new Random();
            return random.Next(100000000, 999999999);
        }

        public void DisplayDetails()
        {
            Console.WriteLine($"Reservation Number: {ReservationNumber}");
            Console.WriteLine($"Start Time: {StartTime}");
            Console.WriteLine($"End Time: {EndTime}");
            Console.WriteLine($"Duration: {DurationInDays} days");
            Console.WriteLine($"Total: {Total}");
        }
    }

    public class Guest
    {
        public string Name { get; set; }
        public string Address { get; set; }
        public string Email { get; set; }
        public int PhoneNumber { get; set; }
        private List<Reservation> reservations;

        public Guest(string name, string address, string email, int phoneNumber)
        {
            Name = name;
            Address = address;
            Email = email;
            PhoneNumber = phoneNumber;
            reservations = new List<Reservation>();
        }

        public void BookReservation(Reservation reservation)
        {
            reservations.Add(reservation);
        }

        public void DisplayReservations()
        {
            Console.WriteLine($"List of Reservations of {Name}:");
            foreach (var reservation in reservations)
            {
                reservation.DisplayDetails();
            }
        }
    }

    public class Receptionist
    {
        public string Name { get; set; }
        public string Address { get; set; }
        public string Email { get; set; }
        public int PhoneNumber { get; set; }

        public Receptionist(string name, string address, string email, int phoneNumber)
        {
            Name = name;
            Address = address;
            Email = email;
            PhoneNumber = phoneNumber;
        }

        public void BookReservation(Guest guest, Reservation reservation)
        {
            guest.BookReservation(reservation);
        }
    }

    public class HotelManagementSystem
    {
        private List<Hotel> hotels;
        private List<Guest> users;
        private List<Reservation> reservations;

        public HotelManagementSystem()
        {
            hotels = new List<Hotel>();
            users = new List<Guest>();
            reservations = new List<Reservation>();
        }

        public void RegisterUser(Guest user)
        {
            users.Add(user);
        }

        public void AddHotel(Hotel hotel)
        {
            hotels.Add(hotel);
        }

        public void DisplayHotels()
        {
            Console.WriteLine("List of Hotels:");
            foreach (var hotel in hotels)
            {
                Console.WriteLine($"{hotel.HotelName}, {hotel.Location}");
            }
        }

        public void BookReservation(Hotel hotel, HotelRoom room, Guest guest, DateTime startTime, DateTime endTime)
        {
            if (!room.Status)
            {
                Console.WriteLine("Room is already booked.");
                return;
            }

            room.Status = false;
            Reservation reservation = new Reservation(startTime, endTime, room);
            reservations.Add(reservation);
            guest.BookReservation(reservation);
        }

        public void DisplayReservationDetails(int reservationNumber)
        {
            var reservation = reservations.Find(r => r.ReservationNumber == reservationNumber);
            if (reservation == null)
            {
                Console.WriteLine("Reservation not found.");
                return;
            }

            reservation.DisplayDetails();
        }

        internal void RegisterUser(Receptionist anna) => throw new NotImplementedException();
    }
